/*
 * Copyright (c) 2016, Bigsens, LLC
 * Platform messages and constants definitions.
 * Author: Constantin Alexandrov
 */

var _ = require('underscore');

var BS = {
	Message : {
		// Messages
		MESSAGE_REGISTER : 0x00a0,
		MESSAGE_UNREGISTER : 0x00a1,
		MESSAGE_REGISTRY : 0x00a2,
		MESSAGE_DISCOVER : 0x00a3,
		// Host machine
		MACHINE_CONNECT	: 0x01a0,
		MACHINE_DISCONNECT : 0x01a1,
		MACHINE_INFO : 0x01a2,
		MACHINE_SYSTEM_INFO : 0x01a3,
		// Services
		SERVICE_ANNCE : 0x0100, // Service announcement
		SERVICE_INFO : 0x0101,
		SERVICE_ERROR : 0x0102,
		SERVICE_READY : 0x0103,
		SERVICE_LIST : 0x0104,
		SERVICE_START : 0x0105,
		SERVICE_STOP : 0x0106,
		SERVICE_STATUS : 0x0107,
		SERVICE_DISCONNECT : 0x0108,
		// Devices
		DEVICE_LIST : 0x0200,
		DEVICE_GET_INFO_BY_ID : 0x0201,
		DEVICE_GET_EXTENDED_INFO_BY_ID : 0x0202, // Dump all specific information
		DEVICE_STATE : 0x0203, // Info about device state
		DEVICE_READ_ATTRIBUTE : 0x020f,
		DEVICE_WRITE_ATTRIBUTE : 0x0210,
		DEVICE_FUNC : 0x0211, // Call function
		DEVICE_REMOVE : 0x0212,
		// Commands
		PAIRING_MODE : 0x0300,
		// Misc
		USER_MESSAGE : 0x1fff
	},
	DeviceState : {
		DS_JOIN : 0x01,
		DS_LEAVE : 0x02,
		DS_ONLINE : 0x03,
		DS_OFFLINE : 0x04,
		DS_CHANGE_VALUE : 0x05,
		DS_UNKNOWN : 0xff
	},
	// Bigsens platform device types
	DeviceType : {
		DT_ON_OFF_SWITCH : 0,
		DT_LEVEL_CONTROL_SWITCH : 1,
		DT_ON_OFF_OUTPUT : 2,
		DT_LEVEL_CONTROLLABLE_OUTPUT : 3,
		DT_SCENE_SELECTOR : 4,
		DT_CONFIGURATION_TOOL : 5,
		DT_REMOTE_CONTROL : 6,
		DT_COMBINED_INTERFACE : 7,
		DT_RANGE_EXTENDER : 8,
		DT_MAINS_POWER_OUTLET : 9,
		DT_DOOR_LOCK : 10,
		DT_DOOR_LOCK_CONTROLLER : 11,
		DT_SIMPLE_SENSOR : 12,
		DT_CONSUMPTION_AWRENESS_DEVICE : 13,
		DT_HOME_GATEWAY : 80,
		DT_SMART_PLUG : 81,
		DT_WHITE_GOODS : 82,
		DT_METER_INTERFACE : 83,
		DT_TEST_DEVICE : 255,
		DT_ON_OFF_LIGHT : 256,
		DT_DIMMABLE_LIGHT : 257,
		DT_COLORED_DIMMABLE_LIGHT : 258,
		DT_ON_OFF_LIGHT_SWITCH : 259,
		DT_DIMMER_SWITCH : 260,
		DT_COLOR_DIMMER_SWITCH : 261,
		DT_LIGHT_SENSOR : 262,
		DT_OCCUPANCY_SENSOR : 263,
		DT_SHADE : 512,
		DT_SHADE_CONTROLLER : 513,
		DT_WINDOW_COVERING_DEVICE : 514,
		DT_WINDOW_COVERING_CONTROLLER : 515,
		DT_HEATING_COOLING_UNIT : 768,
		DT_THERMOSTAT : 769,
		DT_TEMPERATURE_SENSOR : 770,
		DT_PUMP : 771,
		DT_PUMP_CONTROLLER : 772,
		DT_PRESSURE_SENSOR : 773,
		DT_FLOW_SENSOR : 774,
		DT_MINI_SPLIT_AC : 775,
		/*
		 * IAS devices
		 */
		DT_IAS_CONTROL_INDICATING_EQUIPMENT : 1024,
		DT_IAS_ANCILLARY_CONTROL_EQUIPMENT : 1025,
		DT_IAS_ZONE : 1026,
		DT_IAS_WARNING_DEVICE : 1027,
		DT_STANDARD_CIE : 1028, // 0x0000
		DT_MOTION_SENSOR : 1029, // 0x000d
		DT_CONTACT_SWITCH : 1030, // 0x0015
		DT_FIRE_SENSOR : 1031,	// 0x0028
		DT_WATER_SENSOR : 1032,	// 0x002a
		DT_GAS_SENSOR : 1033,	// 0x002b
		DT_PERSONAL_EMERGENCY_DEVICE : 1034, // 0x002c
		DT_VIBRATION_MOVEMENT_SENSOR : 1035, // 0x002d
		DT_REMOTE_CONTROL : 1036, // 0x010f
		DT_KEY_FOB : 1037, // 0x0115
		DT_KEYPAD : 1038, // 0x021d
		DT_STANDARD_WARNING_DEVICE : 1039, // 0x0225
		/*
		 * Media devices
		 */
		DT_MD_SMART_TV : 2000,
		DT_MD_SPEAKER : 2001,
		DT_MD_MICRPHONE : 2002,
		DT_MD_CAMERA : 2003
	}
};

// Human readable names
BS.Message.inverted = _.invert(BS.Message);
BS.DeviceState.inverted = _.invert(BS.DeviceState);
BS.DeviceType.inverted = _.invert(BS.DeviceType);

module.exports = BS;

